<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>

        <service class="UserIdentity\Infrastructure\Projection\UserFinder"
                 id="user_identity.infrastructure.projection.user_finder">
            <argument id="doctrine" type="service"/>
        </service>

        <service class="UserIdentity\Infrastructure\Projection\PublisherFinder"
                 id="user_identity.infrastructure.projection.publisher_finder">
            <argument id="doctrine" type="service"/>
        </service>

        <service class="Symfony\Component\Security\Core\Encoder\BCryptPasswordEncoder" id="bcrypt_encoder">
            <argument>12</argument>
        </service>

        <service class="UserIdentity\Infrastructure\Persistence\DoctrineChecksUniquerUsersEmailAddress"
                 id="user_identity.infrastructure.persistence.doctrine_checks_uniquer_users_email_address">
            <argument id="user_identity.infrastructure.projection.user_finder" type="service"/>
        </service>

        <service class="UserIdentity\Infrastructure\Rx\RegisterSuccess" id="user_identity.infrastructure.rx.register_success">
            <argument id="prooph_event_store.doctrine_adapter.user_store" type="service"/>
            <argument id="security.token_storage" type="service"/>
            <argument id="user_identity.infrastructure.rx.query_observable" type="service"/>
        </service>

        <service class="UserIdentity\Infrastructure\Rx\QueryObservable" id="user_identity.infrastructure.rx.query_observable">
            <argument id="prooph_service_bus.user_query_bus" type="service"/>
        </service>

        <service class="Prooph\EventStore\Snapshot\Adapter\Doctrine\DoctrineSnapshotAdapter"
                 id="prooph.event_store.snapshot.adapter.doctrine.doctrine_snapshot_adapter">
            <argument id="doctrine.dbal.default_connection" type="service"/>
            <argument type="collection">
                <argument key="UserIdentity\Domain\Model\Publisher::class">snapshot</argument>
                <argument key="UserIdentity\Domain\Model\User::class">snapshot</argument>
            </argument>
        </service>


    </services>
</container>